{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactItem/ContactItem.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","services/storage-api.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","INITIAL_FORM_STATE","ContactForm","addContact","useState","name","setName","number","setNumber","handleChange","target","value","Error","className","s","form","action","onSubmit","e","preventDefault","label","htmlFor","inputField","id","type","placeholder","pattern","title","required","onChange","button","Filter","filter","changeFiler","ContactItem","contact","deleteContact","contactItem","contactText","onClick","ContactList","contacts","list","toLowerCase","includes","map","save","key","serializedState","JSON","stringify","localStorage","setItem","error","console","message","App","setContacts","setFilter","useEffect","getItem","undefined","parse","load","find","isContactAlreadySaved","alert","newContact","nanoid","prevContacts","length","contactsAfterDelete","reduce","acc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6da7264a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__11df8\",\"label\":\"ContactForm_label__28ozr\",\"inputField\":\"ContactForm_inputField__1lxoZ\",\"button\":\"ContactForm_button__2Oena\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactItem_contactItem__2SdNF\",\"contactText\":\"ContactItem_contactText__3MyXL\",\"button\":\"ContactItem_button__1M6kV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__7NSdo\",\"inputField\":\"Filter_inputField__1GbKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__3BjzA\"};","import { useState } from 'react';\nimport { PropTypes } from 'prop-types';\nimport s from './ContactForm.module.css';\n\nconst INITIAL_FORM_STATE = { name: '', number: '' };\n\nconst ContactForm = ({ addContact }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const resetForm = () => {\n    setName(INITIAL_FORM_STATE.name);\n    setNumber(INITIAL_FORM_STATE.number);\n  };\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        throw new Error('Unknown input field name');\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    addContact(name, number);\n    resetForm();\n  };\n\n  return (\n    <form className={s.form} action=\"#\" onSubmit={handleSubmit}>\n      <label className={s.label} htmlFor=\"name\">\n        Name:\n      </label>\n      <input\n        className={s.inputField}\n        id=\"name\"\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Enter name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={name}\n        onChange={handleChange}\n      />\n      <label className={s.label} htmlFor=\"number\">\n        Number:\n      </label>\n      <input\n        className={s.inputField}\n        id=\"number\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        placeholder=\"Enter phone\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        value={number}\n        onChange={handleChange}\n      />\n\n      <button className={s.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = { addContact: PropTypes.func.isRequired };\n\nexport default ContactForm;\n","import { PropTypes } from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ filter, changeFiler }) => {\n  const handleChange = ({ target }) => {\n    const { value } = target;\n\n    changeFiler(value);\n  };\n\n  return (\n    <>\n      <p className={s.title}>Find contacts by name</p>\n      <input\n        className={s.inputField}\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter name\"\n        value={filter}\n        onChange={handleChange}\n      ></input>\n    </>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  changeFiler: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { PropTypes } from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ contact, deleteContact }) => {\n  return (\n    <li className={s.contactItem}>\n      <span className={s.contactText}>\n        {contact.name}: {contact.number}\n      </span>\n      <button className={s.button} onClick={() => deleteContact(contact.id)}>\n        Delete\n      </button>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n  deleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import { PropTypes } from 'prop-types';\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nconst ContactList = ({ contacts, filter, deleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts\n        .filter(contact => contact.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(contact => {\n          return <ContactItem contact={contact} key={contact.name} deleteContact={deleteContact} />;\n        })}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  filter: PropTypes.string.isRequired,\n};\n\nexport default ContactList;\n","export const save = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nexport const load = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport const remove = key => {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    console.error('Remove state error: ', error.message);\n  }\n};\n","import { useState, useEffect } from 'react';\nimport { nanoid } from 'nanoid';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { save, load } from './services/storage-api';\nimport './App.css';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const contacts = load('contacts');\n    if (contacts) setContacts(contacts);\n  }, []);\n\n  const deleteContact = id => {\n    const contactsAfterDelete = contacts.reduce((acc, contact) => {\n      return contact.id !== id ? [...acc, contact] : acc;\n    }, []);\n\n    setContacts(contactsAfterDelete);\n    save('contacts', contactsAfterDelete);\n  };\n\n  const isContactAlreadySaved = name => {\n    return contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase());\n  };\n\n  const updateContacts = (name, number) => {\n    if (isContactAlreadySaved(name)) {\n      return alert(`${name} is already in contacts.`);\n    }\n\n    const newContact = { id: nanoid(), name, number };\n    setContacts(prevContacts => [...prevContacts, newContact]);\n    save('contacts', [...contacts, newContact]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"phonebookTitle\">Phonebook</h1>\n      <ContactForm addContact={updateContacts} />\n\n      <h2 className=\"contactsTitle\">Contacts</h2>\n      <Filter filter={filter} changeFiler={setFilter} />\n      {contacts.length !== 0 && (\n        <ContactList contacts={contacts} filter={filter} deleteContact={deleteContact} />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}